set nonomatch=1

rm *.lst *.ri

echo Removing old max_sizes.f90.
rm max_sizes.f90

echo Creating new params.h.
cat > max_sizes.f90 <<EOF
!------------------------------------------------------------------------
!
! Fortran 90 Code automatically generated by the AutoChem Programme "Roc".
! by David Lary 1993-2004.
!
!------------------------------------------------------------------------
!
MODULE max_sizes
!
! The maximum number of reactions of in a 
! rate of change, jacobian or hessian term.
INTEGER, PARAMETER :: nmaxi =    32
INTEGER, PARAMETER :: nmaxid =    32
INTEGER, PARAMETER :: nmaxij =    30
INTEGER, PARAMETER :: nmaxia =      1
!
END MODULE max_sizes
!
!------------------------------------------------------------------------
EOF

echo Removing old specie.d.
rm specie.d

echo Creating new specie.d.
cat > specie.d <<EOF
specie flag: 1=integrated, 2=not integrated.
1 'CO        ' 'CO                     '
1 'CO2       ' 'CO_2                   '
1 'H         ' 'H                      '
1 'H2        ' 'H_2                    '
1 'OH        ' 'OH                     '
1 'O(3P)     ' 'O(^3P)                 '
1 'HO2       ' 'HO_2                   '
1 'H2O       ' 'H_2O                   '
1 'H2O2      ' 'H_2O_2                 '
1 'N         ' 'N                      '
1 'NO        ' 'NO                     '
1 'O2        ' 'O_2                    '
1 'N2        ' 'N_2                    '
2 'Photon    ' 'h\nu                   '
2 'm         ' 'M                      '
EOF

echo Removing old total.ctl.
rm total.ctl

echo Creating new total.ctl.
cat > total.ctl <<EOF
3                      ; number of totals.
2 'NOx       '          ; number of species in total and its name.
1 'N         '
1 'NO        '
3 'HOx       '         ; number of species in total and its name.
1 'H         '
1 'OH        '
1 'HO2       '      
3 'Hy       '         ; number of species in total and its name.
1 'H2        '
1 'H2O       '
1 'H2O2      '
EOF

echo Removing old ratio.ctl.
rm ratio.ctl

echo Creating new total.ctl.
cat > ratio.ctl <<EOF
0			; number of ratios.
1  'NO        ' 1  'NO2       '
1  'NO3       ' 1  'NO2       '
1  'OH        ' 1  'HO2       '
1  'Cl        ' 1  'ClO       '
2  'Cl2O2     ' 1  'ClO       '
1  'Br        ' 1  'BrO       '
1  'HCl       ' 1  'ClO       '
1  'HOCl      ' 1  'ClO       '
1  'ClONO2    ' 1  'ClO       '
1  'ClONO2    ' 1  'HCl       '

1  'BrONO2    ' 1  'BrO       '
1  'BrONO2    ' 1  'HBr       '

1  'HONO2     ' 1  'NO2       '
1  'NO3       ' 1  'NO2       '
2  'H2O2      ' 1  'HO2       '
1  'OClO      ' 1  'ClO       '
2  'Cl2O2     ' 1  'ClO       '
1  'HCl       ' 1  'ClO       '
1  'ClO       ' 1  'HCl       '
1  'HOCl      ' 1  'ClO       '
1  'BrO       ' 1  'ClO       '
1  'NO2       ' 1  'ClO       '
1  'HO2       ' 1  'ClO       '
1  'Br        ' 1  'BrO       '
1  'BrCl      ' 1  'BrO       '
1  'BrONO2    ' 1  'BrO       '
1  'HBr       ' 1  'BrO       '
1  'HOBr      ' 1  'BrO       '
EOF


echo Creating new pick.ctl.
cat > pick.ctl <<EOF
4               : Reaction select switch.
                0=either reactant(s) or product(s) is a required specie.
                1=both reactant(s) or product(s) is a required specie.
                2=product(s) is a required specie.
                3=reactant(s) is a required specie.
                4=both reactant(s) and all product(s) are a required specie.
1               : Reject reactions with unknown products.
'leeds-engine-bi.d'        : input bimolecular reaction file.
'react-bi.lst'   : output bimolecular reaction file.
'leeds-engine-tri.d'       : input trimolecular reaction file.
'react-tr.lst'   : output trimolecular reaction file.
'engine-blank.d'        : input photolysis reaction file.
'react-ph.lst'   : output photolysis reaction file.
'engine-blank.d'       : input heterogeneous reaction file.
'react-h.lst'    : output heterogeneous reaction file.
'engine-blank.d'      : input heterogeneous reaction file.
'react-uh.lst'   : output heterogeneous reaction file.
'engine-blank.d'       : input bulk-gas phase transfer file.
'react-trans.lst'  : output bulk-gas phase transfer file.
'engine-blank.d'      : input bulk phase bimolecular file.
'react-bulkbi.lst' : output bulk phase bimolecular file.
'engine-blank.d'        : input cosmic ray reaction file.
'react-cr.lst'   : output cosmic ray reaction file.
EOF


echo Creating new pick.ctl.
cat > pick.ctl <<EOF
4               : Reaction select switch.
                0=either reactant(s) or product(s) is a required specie.
                1=both reactant(s) or product(s) is a required specie.
                2=product(s) is a required specie.
                3=reactant(s) is a required specie.
                4=both reactant(s) and all product(s) are a required specie.
1               : Reject reactions with unknown products.
'engine-bi.d'        : input bimolecular reaction file.
'react-bi.lst'   : output bimolecular reaction file.
'engine-david-tri.d'       : input trimolecular reaction file.
'react-tr.lst'   : output trimolecular reaction file.
'engine-blank.d'        : input photolysis reaction file.
'react-ph.lst'   : output photolysis reaction file.
'engine-blank.d'       : input heterogeneous reaction file.
'react-h.lst'    : output heterogeneous reaction file.
'engine-blank.d'      : input heterogeneous reaction file.
'react-uh.lst'   : output heterogeneous reaction file.
'engine-blank.d'       : input bulk-gas phase transfer file.
'react-trans.lst'  : output bulk-gas phase transfer file.
'engine-blank.d'      : input bulk phase bimolecular file.
'react-bulkbi.lst' : output bulk phase bimolecular file.
'engine-blank.d'        : input cosmic ray reaction file.
'react-cr.lst'   : output cosmic ray reaction file.
EOF


echo Creating new roc.ctl.
cat > roc.ctl <<EOF
'react-bi.lst'   	: bimolecular reaction file.
'react-tr.lst'   	: trimolecular reaction file.
'react-ph.lst'   	: photolysis reaction file.
'react-h.lst'    	: heterogeneous reaction file.
'react-uh.lst'   	: unimolecular heterogeneous reaction file.
'react-trans.lst'  	: bulk-gas phase transfer file.
'react-bulkbi.lst' 	: bulk phase bimolecular file.
'react-cr.lst'   	: cosmic ray reaction file.
0    	     		: Whether adjoint code is wanted.       
EOF


rm *.o *.mod
time make -f makefile.pick-mac clean
time make -f makefile.roc-mac clean


time make -f makefile.pick-mac

time ./pick

time make -f makefile.roc-mac

time ./roc


rm *.o *.mod

latex bimolecular
latex trimolecular
latex Derivatives
latex Jacobian

latex bimolecular
latex trimolecular


echo Making the Engine scheme directories

mkdir -pv Scheme/Engine
cp *.ri react*.lst specie.d *.ctl *.tex Scheme/Engine
